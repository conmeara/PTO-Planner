---
description: 
globs: 
alwaysApply: true
---
# Project Structure

## Main Structure
- SvelteKit application for planning PTO efficiently with holidays
- Main app source code is in `src/` directory
- Single-page application with route in `src/routes`
- Components, utilities, and types are in `src/lib`
- Static assets are in `static/` directory

## File Naming and Organization
- Use PascalCase for component files (e.g., `components/Calendar.svelte`)
- Use camelCase for utility and store files (e.g., `utils/ptoData.ts`)
- Components are organized in `src/lib/components`
- UI components are in `src/lib/components/ui`
- Stores are in `src/lib/stores`
- Types are defined in `src/lib/types`
- Utility functions are in `src/lib/utils`

## Component Organization
- Core components:
  - `src/lib/components/calendar/` - Calendar components for displaying dates
  - `src/lib/components/layout/` - Layout and structural components
  - `src/lib/components/settings/` - Settings panels and controls
  - `src/lib/components/ui/` - Reusable UI elements
- Components are exported through index files for clean imports

## Data Management
- State management through Svelte stores in `src/lib/stores/`
  - `ptoStore.ts` - Manages PTO data, calculations, and multi-year configuration
  - `holidayStore.ts` - Manages holiday data across multiple years and country selections
  - `strategyStore.ts` - Manages PTO optimization strategies
- Data utility functions:
  - `src/lib/utils/ptoEngine.ts` - PTO calculation algorithms and multi-year ledger management
  - `src/lib/utils/holidayUtils.ts` - Holiday data processing
  - `src/lib/utils/optimizationUtils.ts` - Strategy-based PTO optimization algorithms

## Multi-Year PTO Tracking
- Support for calculating PTO across multiple years:
  - Year selection UI in CalendarGrid component
  - Multi-year ledger in ptoEngine with carryover rules
  - Visible years tracking in ptoStore
  - Year-specific holiday caching in holidayStore
- Key components and files:
  - `MultiYearSettings.svelte` - UI for configuring visible years and carryover settings
  - `ptoEngine.ts` - Core logic for multi-year calculations with carryover support
  - Enhancements to existing stores for managing data across years

## Routes
- Main application page at `src/routes/+page.svelte`
- SvelteKit route configuration in the routes directory

## Types
- Type definitions in `src/lib/types/index.ts`
- Includes interfaces for holidays, PTO data, strategies, application state, and multi-year configuration

## PTO Optimization Strategies
- Different strategies for optimizing PTO usage:
  - Balanced Mix - Distributes PTO evenly throughout the year
  - Long Weekends - Focuses on extending weekends with 1-2 days
  - Mini Breaks - Creates multiple 5-6 day breaks
  - Week-Long Breaks - Organizes PTO for 7-9 day vacation periods
  - Extended Vacations - Plans for longer 10-15 day vacation periods
- Implementation:
  - Strategy types and interfaces in `src/lib/types/index.ts`
  - Strategy selection store in `src/lib/stores/strategyStore.ts`
  - Strategy algorithms in `src/lib/utils/optimizationUtils.ts`
  - UI selection in `src/lib/components/ui/CalendarLegendMenu.svelte`
  - Calendar visualization in `src/lib/components/calendar/CalendarMonth.svelte`

## Dependencies
- External libraries:
  - `date-holidays` - For holiday data
  - `i18n-iso-countries` - For country code/name handling
- Dev dependencies:
  - SvelteKit and related tools
  - TypeScript
  - Vite

## Configuration Files
- `svelte.config.js` - SvelteKit configuration
- `vite.config.ts` - Vite bundler configuration
- `tsconfig.json` - TypeScript configuration
- `package.json` - Dependencies and scripts